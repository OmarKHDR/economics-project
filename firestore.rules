rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow reading and writing to all collections initially for development
    // You can restrict this later once your authentication is working properly
    match /{document=**} {
      allow read, write: if true;
    }
    
    // Once authentication is confirmed working, uncomment the rules below
    // and remove the rule above

    /*
    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to get user data
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    // Helper function to check if the user is a service provider
    function isServiceProvider() {
      return getUserData().role == 'service_provider';
    }
    
    // Helper function to check if the user is a home user
    function isHomeUser() {
      return getUserData().role == 'home_user';
    }
    
    // Users collection rules
    match /users/{userId} {
      // Allow users to read their own data
      allow read: if request.auth.uid == userId;
      
      // Allow creation of new user documents (for signup)
      allow create: if true;
      
      // Allow users to update their own data, but not change their role
      allow update: if request.auth.uid == userId && 
                     request.resource.data.role == resource.data.role;
    }
    
    // Service provider specific collections
    match /load-management/{document=**} {
      allow read, write: if isAuthenticated() && isServiceProvider();
    }
    
    // Home user specific collections
    match /smart-home/{document=**} {
      allow read, write: if isAuthenticated() && isHomeUser();
    }
    
    // Shared collections accessible by all authenticated users
    match /shared/{document=**} {
      allow read: if isAuthenticated();
    }
    */
  }
}